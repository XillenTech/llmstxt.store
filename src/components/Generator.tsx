/* eslint-disable react-hooks/exhaustive-deps */
"use client";
import React, { useState, useEffect } from "react";
import PlatformSelector from "./PlatformSelector";
import CustomGenerator from "./CustomGenerator";
import OutputPreview from "./OutputPreview";

const Generator = () => {
  const [selectedPlatform, setSelectedPlatform] = useState("");
  const [customConfig, setCustomConfig] = useState({
    productFeedUrl: "",
    productPaths: "/products/*",
    disallowPaths: "/cart, /checkout, /account, /orders, /admin",
  });
  const [generatedContent, setGeneratedContent] = useState("");

  useEffect(() => {
    generateContent();
  }, [selectedPlatform, customConfig]);

  const generateContent = () => {
    let content = "# eCommerce llms.txt\n";
    content += "# Generated by llmstxt.store\n\n";

    // Add product feed if provided
    if (customConfig.productFeedUrl.trim()) {
      content += `Allow: ${customConfig.productFeedUrl.trim()}\n`;
    }

    // Add product paths
    if (customConfig.productPaths.trim()) {
      const paths = customConfig.productPaths
        .split(",")
        .map((path) => path.trim());
      paths.forEach((path) => {
        if (path) content += `Allow: ${path}\n`;
      });
    }

    // Add platform-specific paths
    if (selectedPlatform) {
      content += getPlatformSpecificPaths(selectedPlatform);
    }

    content += "\n";

    // Add disallow paths
    if (customConfig.disallowPaths.trim()) {
      const disallowPaths = customConfig.disallowPaths
        .split(",")
        .map((path) => path.trim());
      disallowPaths.forEach((path) => {
        if (path) content += `Disallow: ${path}\n`;
      });
    }

    content += "\n# Sitemap\n";
    content += "Sitemap: /sitemap.xml\n";
    content += "Sitemap: /products.xml\n";

    setGeneratedContent(content);
  };

  const getPlatformSpecificPaths = (platform: string) => {
    const platformPaths: { [key: string]: string } = {
      shopify: "Allow: /collections/*\nAllow: /pages/*\n",
      woocommerce: "Allow: /product-category/*\nAllow: /shop/*\n",
      bigcommerce: "Allow: /categories/*\nAllow: /brands/*\n",
      magento: "Allow: /catalog/*\nAllow: /categories/*\n",
    };
    return platformPaths[platform] || "";
  };

  return (
    <section
      id="generator"
      className="py-20 bg-gradient-to-br from-gray-50 to-blue-50"
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Create Your eCommerce llms.txt
            <span className="block text-transparent bg-clip-text bg-gradient-to-r from-purple-600 to-blue-600">
              in Seconds
            </span>
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            Choose your platform for instant setup, or customize the settings
            for your specific needs.
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12">
          <div className="space-y-8">
            <PlatformSelector
              selectedPlatform={selectedPlatform}
              onPlatformSelect={setSelectedPlatform}
            />
            <CustomGenerator
              config={customConfig}
              onConfigChange={setCustomConfig}
            />
          </div>

          <div className="lg:sticky lg:top-24">
            <OutputPreview content={generatedContent} />
          </div>
        </div>
      </div>
    </section>
  );
};

export default Generator;
